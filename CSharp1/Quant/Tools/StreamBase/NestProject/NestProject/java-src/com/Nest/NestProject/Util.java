package com.Nest.NestProject;

/**
 * Generated by JDT StreamBase Client Templates (Version: 7.2.4.1203100759).
 *
 * All custom java simple functions must live in a public Java class as a public static method.
 * Custom Java simple functions can be accessed by the simple form of calljava in any expression
 * except in aggregate functions.
 * They may also be aliased for use as if that function were embedded
 * in your StreamBase Application by using the alias attribute within
 * the <custom-functions> section in the StreamBase Server configuration file.
 * <p>
 * For in-depth information on implementing a StreamBase simple function, please see some
 * related topics from "Developing StreamBase Custom Functions" in the StreamBase 
 * documentation.
 * For more information on using aliases, please see the <custom-functions> section from 
 * "StreamBase Server Configuration XML" in the StreamBase documentation.
 * <p>
 */
public class Util {

	/**
	 * A StreamBase Simple Function. Use this function
	 * in StreamBase expressions using the <em>calljava</em> function, or 
	 * by an assigned alias. It can then be called directly 
	 * using the alias name instead of using calljava().
	 */
	public static double GetQuantity(double qtyStrategy, double resto, boolean Broker) {
		double QuantityBroker = 0;
		double VirtualQuantity = 0;
		
		if (resto != 0 && resto > 0)
		{
			if (qtyStrategy < 0)
			{
				QuantityBroker = 0;
				VirtualQuantity = qtyStrategy;
			} else if (qtyStrategy >0)
			{
				if (qtyStrategy > resto)
				{
					QuantityBroker = resto;
					VirtualQuantity = qtyStrategy-resto;
				} else {
					QuantityBroker = qtyStrategy;
					VirtualQuantity = 0;
				}
			}
		} else if (resto != 0 && resto < 0)
		{
			if (qtyStrategy > 0)
			{
				QuantityBroker = 0;
				VirtualQuantity = qtyStrategy;
			} else if (qtyStrategy < 0)
			{
				if (qtyStrategy < resto)
				{
					QuantityBroker = resto;
					VirtualQuantity = qtyStrategy - resto;
				} else 
				{
					QuantityBroker = qtyStrategy;
					VirtualQuantity = 0;
				}
			}
		} else if (resto == 0)
		{
			QuantityBroker = 0;
			VirtualQuantity = qtyStrategy;
		}
		
		if (Broker)
		{
			return QuantityBroker;
		} else
		{
			return VirtualQuantity;
		}
	}

	/**
	 * A StreamBase Simple Function. Use this function
	 * in StreamBase expressions using the <em>calljava</em> function, or 
	 * by an assigned alias. It can then be called directly 
	 * using the alias name instead of using calljava().
	 */
}