<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NestSimDLL</name>
    </assembly>
    <members>
        <member name="M:NestQuant.Common.Base_Table.GetValueColumnID(System.Int32)">
            <summary>
            Returns the ID of a given value column index
            </summary>
            <param name="Idx_Value">Value column index to seek ID</param>
            <returns>ID of the column with the given index. -1 if not found.</returns>
        </member>
        <member name="M:NestQuant.Common.Strategy.Load_Performances">
            <summary>
            Loads the performance of each strategy in the Strategies container to the subPerformances table
            </summary>
        </member>
        <member name="M:NestQuant.Common.Strategy.Load_Performances(System.Boolean)">
            <summary>
            Loads the performance of each strategy in the Strategies container to the subPerformances table
            </summary>
            <param name="RollPerformance">False to load the performance. True to load the rolling performance.</param>
        </member>
        <member name="M:NestQuant.Common.Strategy.Fill_Weights_EW">
            <summary>
            Fills the subPositions table in a equal weighted scheme based on the subPerformances table
            </summary>
        </member>
        <member name="M:NestQuant.Common.Strategy.Consolidate_Position">
            <summary>
            Consolidates position of all strategies inside the Strategies container.
            </summary>
        </member>
        <member name="M:NestQuant.Common.Strategy.Fill_Strategy_Performance">
            <summary>
            Fills the strategy performance summary
            </summary>
        </member>
        <member name="M:NestQuant.Common.Strategy.AddStrategy(NestQuant.Common.Strategy)">
            <summary>
            Add a strategy to the Strategies container.
            If the strategy´s ID hasn´t been set, set it to its index in the container.
            </summary>
            <param name="StrategyToAdd">Strategy to be added</param>
        </member>
        <member name="M:NestQuant.Common.ExecutionFillArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates instance of ExecutionFillArgs
            </summary>
        </member>
        <member name="T:NestQuant.Common.FIXConn">
            <summary>
            FIX interface to send the orders generated by strategies
            </summary>
        </member>
        <member name="M:NestQuant.Common.FIXConn.#ctor(System.String)">
            <summary>
            Create instance of FIX class
            </summary>
            <param name="_qfConfig">QuickFix configuration file full path</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.sendOrder(System.Int32,System.Int32,System.Double)">
            <summary>
            Send order
            </summary>
            <param name="ID_Ticker">Ticker to buy/sell</param>
            <param name="Qty">Quantity to buy/sell</param>
            <param name="price">Price to buy/sell. Use -1 to buy at market price</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.getSymbol(System.Int32)">
            <summary>
            Returns the symbol (string) of a given Ticker ID
            </summary>
            <param name="ID_Ticker">Ticker to get symbol</param>
            <returns>Symbol of the given Ticker ID</returns>
        </member>
        <member name="M:NestQuant.Common.FIXConn.onMessage(QuickFix42.ExecutionReport,QuickFix.SessionID)">
            <summary>
            Handle the messages received through the FIX connection
            </summary>
            <param name="message">Received Execution Report message</param>
            <param name="session">Session of the message</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.ExecutionFill(QuickFix42.ExecutionReport,QuickFix.SessionID)">
            <summary>
            Method to process Fill and Partial Fill Execution Reports
            </summary>
            <param name="message">Fill or Partial Fill Execution Report</param>
            <param name="session">Unique session identifier</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.ChangeOrderStatus(QuickFix42.ExecutionReport,QuickFix.SessionID)">
            <summary>
            Changes the status of an order
            </summary>
            <param name="message">Message with the new status</param>
            <param name="session">Unique session identifier</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.onCreate(QuickFix.SessionID)">
            <summary>
            Called on FIX session creation
            </summary>
            <param name="sessionID">Identifies uniquely the session</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.onLogon(QuickFix.SessionID)">
            <summary>
            Called on successful logon
            </summary>
            <param name="sessionID">Identifies uniquely the session</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.onLogout(QuickFix.SessionID)">
            <summary>
            Called when connection ends
            </summary>
            <param name="sessionID">Identifies uniquely the session</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.toAdmin(QuickFix.Message,QuickFix.SessionID)">
            <summary>
            Called before the application sends a session message
            </summary>
            <param name="message">FIX message</param>
            <param name="sessionID">Identifies uniquely the session</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.fromAdmin(QuickFix.Message,QuickFix.SessionID)">
            <summary>
            Called when a session message is received
            </summary>
            <param name="message">FIX message</param>
            <param name="sessionID">Identifies uniquely the session</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.toApp(QuickFix.Message,QuickFix.SessionID)">
            <summary>
            Called before the application sends an application message
            </summary>
            <param name="message">FIX message</param>
            <param name="sessionID">Identifies uniquely the session</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.fromApp(QuickFix.Message,QuickFix.SessionID)">
            <summary>
            Called when an application message is received
            </summary>
            <param name="message">FIX message</param>
            <param name="sessionID">Identifies uniquely the session</param>
        </member>
        <member name="M:NestQuant.Common.FIXConn.Dispose">
            <summary>
            Disposes FIX class
            </summary>
        </member>
        <member name="E:NestQuant.Common.FIXConn.ReceivedFill">
            <summary>
            Event executed when a Fill or Partial Fill Execution Report is received
            </summary>
        </member>
        <member name="P:NestQuant.Common.FIXConn.QFConfig">
            <summary>
            Full path to QuickFix configuration File
            </summary>
        </member>
        <member name="P:NestQuant.Common.FIXConn.ID_Session">
            <summary>
            Unique session identifier
            </summary>
        </member>
        <member name="T:NestQuant.Common.Order">
            <summary>
            Represents a sent order
            </summary>
        </member>
        <member name="M:NestQuant.Common.Order.#ctor(QuickFix.ClOrdID,System.Int32,QuickFix.Symbol,QuickFix.Side,QuickFix.OrderQty,QuickFix.Price)">
            <summary>
            Class´ constructor
            </summary>
            <param name="id_Ticker">ID of the ticker</param>
            <param name="symbol">Symbol of the ticker</param>
            <param name="side">Order´s side</param>
            <param name="orderQty">Quantity of shares do buy/sell</param>
            <param name="price">Price to buy/sell shares</param>
            <param name="clOrdID">clOrdID of the order</param>
        </member>
        <member name="M:NestQuant.Common.Order.FillOrder(QuickFix.ClOrdID,QuickFix.LastShares,QuickFix.CumQty)">
            <summary>
            Fills the order with the number of last shares received on an Execution Report
            </summary>
            <param name="clOrdId">ClOrdId of the order to be filled</param>
            <param name="lastShares">Qty of shares to fill</param>
            <param name="cumQty">Total of shares filled</param>
        </member>
        <member name="M:NestQuant.Common.Order.ChangeStatus(QuickFix.OrdStatus)">
            <summary>
            Changes the order´s status. Throws exception if the new status is unreachable from the current status
            </summary>
            <param name="ordStatus">New order status</param>
        </member>
        <member name="M:NestQuant.Common.Signal_Table.FillPositionFromComposite(System.Int32,NestQuant.Common.Utils.PositionSchemes)">
            <summary>
            Fills the Signal Table based on the selected scheme
            </summary>
            <param name="id_Ticker_Composite">Composite to create table</param>
            <param name="positionScheme">Filling scheme</param>
        </member>
    </members>
</doc>
