//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace GetXPExecs.ctXPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ctServicoExternoSoap", Namespace="http://tempuri.org/")]
    public partial class ctServicoExterno : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private XPSyncBrokerSOAPHeader xPSyncBrokerSOAPHeaderValueField;
        
        private System.Threading.SendOrPostCallback XPSyncNegociosConsultarOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutenticarBrokerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ctServicoExterno() {
            this.Url = global::GetXPExecs.Properties.Settings.Default.GetXPExecs_br_com_xpi_xpconnect_ctServicoExterno;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public XPSyncBrokerSOAPHeader XPSyncBrokerSOAPHeaderValue {
            get {
                return this.xPSyncBrokerSOAPHeaderValueField;
            }
            set {
                this.xPSyncBrokerSOAPHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event XPSyncNegociosConsultarCompletedEventHandler XPSyncNegociosConsultarCompleted;
        
        /// <remarks/>
        public event AutenticarBrokerCompletedEventHandler AutenticarBrokerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("XPSyncBrokerSOAPHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XPSyncNegociosConsultar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable XPSyncNegociosConsultar(string opcao, string datainicial, string datafinal, string nrbroker, string nrcliente, string papel) {
            object[] results = this.Invoke("XPSyncNegociosConsultar", new object[] {
                        opcao,
                        datainicial,
                        datafinal,
                        nrbroker,
                        nrcliente,
                        papel});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void XPSyncNegociosConsultarAsync(string opcao, string datainicial, string datafinal, string nrbroker, string nrcliente, string papel) {
            this.XPSyncNegociosConsultarAsync(opcao, datainicial, datafinal, nrbroker, nrcliente, papel, null);
        }
        
        /// <remarks/>
        public void XPSyncNegociosConsultarAsync(string opcao, string datainicial, string datafinal, string nrbroker, string nrcliente, string papel, object userState) {
            if ((this.XPSyncNegociosConsultarOperationCompleted == null)) {
                this.XPSyncNegociosConsultarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXPSyncNegociosConsultarOperationCompleted);
            }
            this.InvokeAsync("XPSyncNegociosConsultar", new object[] {
                        opcao,
                        datainicial,
                        datafinal,
                        nrbroker,
                        nrcliente,
                        papel}, this.XPSyncNegociosConsultarOperationCompleted, userState);
        }
        
        private void OnXPSyncNegociosConsultarOperationCompleted(object arg) {
            if ((this.XPSyncNegociosConsultarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XPSyncNegociosConsultarCompleted(this, new XPSyncNegociosConsultarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutenticarBroker", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public XPSyncBrokerSOAPHeader AutenticarBroker(string login, string password) {
            object[] results = this.Invoke("AutenticarBroker", new object[] {
                        login,
                        password});
            return ((XPSyncBrokerSOAPHeader)(results[0]));
        }
        
        /// <remarks/>
        public void AutenticarBrokerAsync(string login, string password) {
            this.AutenticarBrokerAsync(login, password, null);
        }
        
        /// <remarks/>
        public void AutenticarBrokerAsync(string login, string password, object userState) {
            if ((this.AutenticarBrokerOperationCompleted == null)) {
                this.AutenticarBrokerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutenticarBrokerOperationCompleted);
            }
            this.InvokeAsync("AutenticarBroker", new object[] {
                        login,
                        password}, this.AutenticarBrokerOperationCompleted, userState);
        }
        
        private void OnAutenticarBrokerOperationCompleted(object arg) {
            if ((this.AutenticarBrokerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutenticarBrokerCompleted(this, new AutenticarBrokerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class XPSyncBrokerSOAPHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string brokerTokenField;
        
        private string brokerLoginField;
        
        private string brokerPasswordField;
        
        private string[] avaliableBrokersField;
        
        private string[] avaliableClientsField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string brokerToken {
            get {
                return this.brokerTokenField;
            }
            set {
                this.brokerTokenField = value;
            }
        }
        
        /// <remarks/>
        public string brokerLogin {
            get {
                return this.brokerLoginField;
            }
            set {
                this.brokerLoginField = value;
            }
        }
        
        /// <remarks/>
        public string brokerPassword {
            get {
                return this.brokerPasswordField;
            }
            set {
                this.brokerPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string[] avaliableBrokers {
            get {
                return this.avaliableBrokersField;
            }
            set {
                this.avaliableBrokersField = value;
            }
        }
        
        /// <remarks/>
        public string[] avaliableClients {
            get {
                return this.avaliableClientsField;
            }
            set {
                this.avaliableClientsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void XPSyncNegociosConsultarCompletedEventHandler(object sender, XPSyncNegociosConsultarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XPSyncNegociosConsultarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XPSyncNegociosConsultarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AutenticarBrokerCompletedEventHandler(object sender, AutenticarBrokerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutenticarBrokerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutenticarBrokerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XPSyncBrokerSOAPHeader Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XPSyncBrokerSOAPHeader)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591