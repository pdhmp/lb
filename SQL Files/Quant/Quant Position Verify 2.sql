DECLARE @CURDATE DATETIME
DECLARE @PREVDATE DATETIME
DECLARE @IDCOMPOSITE INT
DECLARE @IDPORTFOLIO INT
DECLARE @IDBOOK INT
DECLARE @IDSECTION INT
DECLARE @IDCURRENCY INT
DECLARE @RELEVANTID INT
DECLARE @MINTRADE FLOAT
DECLARE @CLOSEUSDBRL FLOAT
DECLARE @USDBRL FLOAT

SET @CURDATE = '20110120'
SET @IDPORTFOLIO = 43
SET @IDSECTION = 68

DECLARE @AUXTABLE TABLE(Date datetime, Sector varchar(30),IdSecurity int, Ticker varchar(10), SimContrib float,
						PosContrib float, TradeContrib float, ActContrib float, Diff float, AbsDiff float,
						ExecError int, SimClosePos float, ActPos float, IniPosition float, 
						StratNAV float, PriceClose float, DayTR float, LotSize float, PosDiff float, 
						PosDiffCash float, PosDiffShares float,AssetPL float, Realized float, 						
						TradeQuantity float, TradeCash float, LastPrice float)

DECLARE @TRADES TABLE(IDSECURITY int, TradeQuantity float, TradeCash float)

DECLARE @STRATNAV FLOAT

SET @IDBOOK = 3
SET @USDBRL = NESTDB.DBO.FCN_GET_PRICE_VALUE_ONLY(900,@CURDATE, 1, 0, 1, 0, 0)
SET @CLOSEUSDBRL = NESTDB.DBO.FCN_GET_PRICE_VALUE_ONLY(900,@CURDATE-1, 1, 0, 1, 0, 0)


IF @IDSECTION = 54 
	BEGIN
		SET @IDCOMPOSITE = 32916
		SET @RELEVANTID = 1073
		SET @MINTRADE = 5000
		SET @USDBRL = 1
	END
ELSE IF @IDSECTION = 55
	BEGIN
		SET @IDCOMPOSITE = 32917
		SET @RELEVANTID = 5310
		SET @MINTRADE = 5000 * @CLOSEUSDBRL
	END
ELSE IF @IDSECTION = 68
	BEGIN
		SET @IDCOMPOSITE = 64158
		SET @RELEVANTID = 1073
		SET @MINTRADE = 5000
		SET @USDBRL = 1
	END

IF @IDPORTFOLIO = 43
	BEGIN
		SET @IDCURRENCY = 900
	END
ELSE IF @IDPORTFOLIO = 4
	BEGIN
		SET @IDCURRENCY = 1042
	END

SET @PREVDATE = NESTDB.dbo.FCN_NDATEADD('du', -1, @CURDATE,99,@RELEVANTID)

--GET STRAT NAV
SELECT @STRATNAV = MAX([BOOK NAV] * [STRATEGY %]) FROM NESTDB.DBO.TB000_HISTORICAL_POSITIONS (NOLOCK)
WHERE [ID PORTFOLIO] = @IDPORTFOLIO AND [ID BOOK] = @IDBOOK 
AND [ID SECTION] = @IDSECTION AND [DATE NOW] = @CURDATE

--GET TRADES
INSERT INTO @TRADES
SELECT	[ID TICKER] AS IDSECURITY,
		SUM([TRADE QUANTITY]) AS TradeQuantity,
		SUM([TRADE QUANTITY] * [TRADE PRICE]) AS TradeCash
  FROM	NESTDB.DBO.VW_LB_TRADES (NOLOCK) A
 WHERE	A.[ID PORTFOLIO] = @IDPORTFOLIO
   AND	A.[ID BOOK] = @IDBOOK
   AND	A.[ID SECTION] = @IDSECTION
   AND  A.[TRADE DATE] = @CURDATE
   AND	A.[ID TRADE STATUS] <> 4
GROUP BY [ID TICKER], [NESTTICKER]

--GET ALL TICKERS

INSERT INTO @AUXTABLE 
SELECT	@CURDATE,'', ID_TICKER_COMPONENT,'', 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  
  FROM	NESTDB.DBO.TB023_SECURITIES_COMPOSITION (NOLOCK)
WHERE ID_TICKER_COMPOSITE = @IDCOMPOSITE AND DATE_REF = @CURDATE
UNION
SELECT @CURDATE,'', [ID TICKER],'', 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  FROM NESTDB.DBO.TB000_HISTORICAL_POSITIONS (NOLOCK)
WHERE [DATE NOW] = @CURDATE AND [ID PORTFOLIO] = @IDPORTFOLIO
AND [ID BOOK] = @IDBOOK AND [ID SECTION] = @IDSECTION

--GET SIM POSITION, TICKER
UPDATE @AUXTABLE
SET SECTOR = COALESCE((SELECT	SETOR 
						 FROM	NESTDB.DBO.TB001_SECURITIES_FIXED (NOLOCK) B,
								NESTDB.DBO.TB000_ISSUERS (NOLOCK) C,
								NESTDB.DBO.TB113_SETORES (NOLOCK) D
						WHERE	B.IDISSUER = C.IDISSUER
						  AND	C.IDNESTSECTOR = D.ID_SETOR
						  AND	B.IDSECURITY = A.IDSECURITY),''),
	TICKER = COALESCE((SELECT NESTTICKER FROM NESTDB.DBO.TB001_SECURITIES_VARIABLE (NOLOCK) B
					   WHERE B.IDSECURITY = A.IDSECURITY 
					   AND VALIDASOFDATE = (SELECT MAX(VALIDASOFDATE) FROM NESTDB.DBO.TB001_SECURITIES_VARIABLE (NOLOCK) C
											WHERE C.IDSECURITY = A.IDSECURITY AND C.VALIDASOFDATE <= @CURDATE)),''),
     SIMCLOSEPOS = COALESCE((SELECT WEIGHT FROM NESTDB.DBO.TB023_SECURITIES_COMPOSITION (NOLOCK) B 
						    WHERE B.DATE_REF = @CURDATE AND B.ID_TICKER_COMPOSITE = @IDCOMPOSITE 
							AND B.ID_TICKER_COMPONENT = A.IDSECURITY),0),
	 STRATNAV = @STRATNAV,	
	 INIPOSITION = COALESCE((SELECT [INITIAL POSITION] FROM NESTDB.DBO.TB000_HISTORICAL_POSITIONS (NOLOCK) B
							 WHERE B.[ID TICKER] = A.IDSECURITY AND B.[DATE NOW] = @CURDATE
							 AND B.[ID PORTFOLIO] = @IDPORTFOLIO AND B.[ID BOOK] = @IDBOOK
							 AND B.[ID SECTION] = @IDSECTION),0),
	 AssetPL = COALESCE((SELECT [Asset P/L PC] FROM NESTDB.DBO.TB000_HISTORICAL_POSITIONS (NOLOCK) B
							 WHERE B.[ID TICKER] = A.IDSECURITY AND B.[DATE NOW] = @CURDATE
							 AND B.[ID PORTFOLIO] = @IDPORTFOLIO AND B.[ID BOOK] = @IDBOOK
							 AND B.[ID SECTION] = @IDSECTION),0),
	 Realized = COALESCE((SELECT [Realized] FROM NESTDB.DBO.TB000_HISTORICAL_POSITIONS (NOLOCK) B
							 WHERE B.[ID TICKER] = A.IDSECURITY AND B.[DATE NOW] = @CURDATE
							 AND B.[ID PORTFOLIO] = @IDPORTFOLIO AND B.[ID BOOK] = @IDBOOK
							 AND B.[ID SECTION] = @IDSECTION),0),
	 PRICECLOSE =  NESTDB.dbo.FCN_GET_PRICE_Value_Only(A.IDSECURITY,@PREVDATE,1,@IDCURRENCY,2,0,0),
	 LASTPRICE =  NESTDB.dbo.FCN_GET_PRICE_Value_Only(A.IDSECURITY,@CURDATE,1,@IDCURRENCY,2,0,0),	
	 DAYTR = NESTDB.dbo.FCN_GET_PRICE_Value_Only(A.IDSECURITY,@CURDATE,100,0,1,0,0),
	 LOTSIZE = COALESCE((SELECT ROUNDLOT FROM NESTDB.DBO.TB001_SECURITIES_VARIABLE (NOLOCK) B
					   WHERE B.IDSECURITY = A.IDSECURITY 
					   AND VALIDASOFDATE = (SELECT MAX(VALIDASOFDATE) FROM NESTDB.DBO.TB001_SECURITIES_VARIABLE (NOLOCK) C
											WHERE C.IDSECURITY = A.IDSECURITY AND C.VALIDASOFDATE <= @CURDATE)),'')
		

FROM @AUXTABLE A

UPDATE @AUXTABLE
SET	TRADEQUANTITY = COALESCE((SELECT TRADEQUANTITY FROM @TRADES B WHERE A.IDSECURITY = B.IDSECURITY),0),
	TRADECASH = COALESCE((SELECT TRADECASH FROM @TRADES B WHERE A.IDSECURITY = B.IDSECURITY),0) * @USDBRL
FROM @AUXTABLE A

UPDATE @AUXTABLE
SET	ACTPOS = (INIPOSITION*PRICECLOSE/LOTSIZE)/STRATNAV,
	SIMCONTRIB = SIMCLOSEPOS*DAYTR * 10000,
	PosContrib = (INIPOSITION*PRICECLOSE/LOTSIZE)/STRATNAV*DAYTR  * 10000,
	TRADECONTRIB = ((TRADEQUANTITY * LASTPRICE) - TRADECASH)/STRATNAV * 10000
FROM @AUXTABLE A

UPDATE @AUXTABLE
SET	POSDIFF = ACTPOS - SIMCLOSEPOS,
	POSDIFFCASH = (ACTPOS - SIMCLOSEPOS) * STRATNAV,
	POSDIFFSHARES = (ACTPOS - SIMCLOSEPOS) * STRATNAV/PRICECLOSE	
FROM @AUXTABLE A

UPDATE @AUXTABLE
SET	ActContrib = PosContrib + TradeContrib
FROM @AUXTABLE A

UPDATE @AUXTABLE
SET	Diff = ActContrib - SimContrib,	
	AbsDiff = abs(actContrib - simContrib)
FROM @AUXTABLE A

UPDATE @AUXTABLE
SET	EXECERROR = CASE WHEN ABS(POSDIFFCASH) > @MINTRADE AND ABS(POSDIFFSHARES) >=50 THEN 1 ELSE 0 END
FROM @AUXTABLE A


SELECT	*
FROM @AUXTABLE
ORDER BY ABSDIFF DESC

